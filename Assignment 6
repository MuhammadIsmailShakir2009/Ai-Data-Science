import numpy as np
%time
# Part 1
python_list = list(range(100000))
numpy_array = np.array(python_list)
start = time.time()
[x * 5 for x in python_list]
end = time.time()
list_time = end - start
start = time.time()
numpy_array * 5
end = time.time()
numpy_time = end - start
print("List time:", list_time)
print("NumPy time:", numpy_time)

# Part 2
%time
arr1 = np.arange(1, 11)
arr2 = np.arange(1, 10).reshape(3, 3)
print(arr1.ndim, arr1.shape, arr1.size, arr1.dtype, arr1.itemsize)
print(arr2.ndim, arr2.shape, arr2.size, arr2.dtype, arr2.itemsize)
float_arr = np.random.rand(3, 3)
int_arr = float_arr.astype(int)
print(float_arr, int_arr)

# Part 3
%time
zero_matrix = np.zeros((4, 4))
one_matrix = np.ones((3, 2))
identity_matrix = np.eye(5)
const_array = np.full((3, 3), 7)
rand_array = np.random.randint(10, 100, (3, 4))
arange_arr = np.arange(5, 50, 5).reshape(3, 3)
print(zero_matrix, one_matrix, identity_matrix, const_array, rand_array, arange_arr)

# Part 4: Indexing and Slicing
%time
arr = np.array([[10, 20, 30, 40],
                [50, 60, 70, 80],
                [90, 100, 110, 120]])
print(arr[1])
print(arr[:2, 1:3])
print(arr[:, 3])
arr[1] = [1, 2, 3, 4]
print(arr)

# Part 4: Vectorization
%time
A = np.random.randint(1, 100, 5)
B = np.random.randint(1, 100, 5)
print(A + B, A - B, A * B, A / B)
C = np.array([1, 2, 3, 4, 5])
print(np.sqrt(C), np.exp(C), np.sin(C))
temperatures = np.array([20, 25, 30, 35, 40, 15, 10, 5, 0, -5])
fahrenheit = (temperatures * 9/5) + 32
print(fahrenheit)

# Part 4: Broadcasting
%time
A = np.arange(1, 10).reshape(3, 3)
print(A + 10)
print(A + np.array([1, 2, 3]))
print(A + np.array([[1], [2], [3]]))

# Part 4: Reshape, Flatten, Ravel
%time
arr = np.arange(1, 13)
reshaped1 = arr.reshape(3, 4)
reshaped2 = arr.reshape(2, 6)
flat = reshaped1.flatten()
ravel_arr = reshaped1.ravel()
flat[0] = 99
ravel_arr[1] = 88
print(reshaped1, reshaped2, flat, ravel_arr, reshaped1)
arr2 = np.arange(1, 10).reshape(3, 3)
flat2 = arr2.flatten()
ravel2 = arr2.ravel()
ravel2[0] = 77
print(flat2, ravel2, arr2)
